type Query {
  #Users
  getUsers: [User]!
  getUser(email: String!): User
  usersDepartment(department: String!): [User]!
  countUsersDepartment(department: String!): Int
  #Cages
  getCage(id: ID!): Cage
  getCages: [Cage]!
  #Rack
  getRack(id: ID!): Rack
  getRacks: [Rack]!
}
type Mutation {
  #Users
  createUser(data: inputUser!): User!
  updateUser(email: String!, data: updateUser!): User!
  deleteUser(email: String!): Boolean!
  #Cages
  createCage(data: inputCage!): Cage!
  updateCage(id: ID!, data: updateCage!): Cage!
  deleteCage(id: ID!): Boolean!
  #Racks
  createRack(data: inputRack!): Rack!
  updateRack(id: ID!, data: updateRack!): Rack!
  deleteRack(id: ID!): Boolean!
}
